import{b as H,P as k,V as S}from"./index.browser.esm.f664673d.js";import{E as W,v as P,b as u}from"./v4.1ba5b5de.js";import{S as j,d as N,e as F}from"./0.848c5abe.js";function A(s){return s.version===void 0}function O(s){return A(s)?s.serialize({verifySignatures:!1,requireAllSignatures:!1}):s.serialize()}function C(s){return A(s)?s.serializeMessage():s.message.serialize()}function K(s,i,e){if(A(s))s.addSignature(i,H.Buffer.from(e));else{const n=s.message.staticAccountKeys.slice(0,s.message.header.numRequiredSignatures).findIndex(r=>r.equals(i));n>=0&&(s.signatures[n]=e)}}var x=globalThis&&globalThis.__awaiter||function(s,i,e,t){function n(r){return r instanceof e?r:new e(function(a){a(r)})}return new(e||(e=Promise))(function(r,a){function h(o){try{l(t.next(o))}catch(d){a(d)}}function _(o){try{l(t.throw(o))}catch(d){a(d)}}function l(o){o.done?r(o.value):n(o.value).then(h,_)}l((t=t.apply(s,i||[])).next())})};function E(s){return x(this,void 0,void 0,function*(){try{return yield s.request({method:"wallet_getSnaps"}),!0}catch{return!1}})}function L(){return x(this,void 0,void 0,function*(){try{const s=window.ethereum;if(!s)return null;if(s.providers&&Array.isArray(s.providers)){const i=s.providers;for(const e of i)if(yield E(e))return e}if(s.detected&&Array.isArray(s.detected)){const i=s.detected;for(const e of i)if(yield E(e))return e}return(yield E(s))?s:null}catch(s){return console.error(s),null}})}const $="solana:mainnet",R="solana:devnet",q="solana:testnet",D="solana:localnet",z=[$,R,q,D];function M(s){return z.includes(s)}var f=globalThis&&globalThis.__classPrivateFieldGet||function(s,i,e,t){if(e==="a"&&!t)throw new TypeError("Private accessor was defined without a getter");if(typeof i=="function"?s!==i||!t:!i.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?t:e==="a"?t.call(s):t?t.value:i.get(s)},m=globalThis&&globalThis.__classPrivateFieldSet||function(s,i,e,t,n){if(t==="m")throw new TypeError("Private method is not writable");if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a setter");if(typeof i=="function"?s!==i||!n:!i.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t==="a"?n.call(s,e):n?n.value=e:i.set(s,e),e},g,p,v,w,y,b;const U=z,B=[j,N,F];class T{get address(){return f(this,g,"f")}get publicKey(){return f(this,p,"f").slice()}get chains(){return f(this,v,"f").slice()}get features(){return f(this,w,"f").slice()}get label(){return f(this,y,"f")}get icon(){return f(this,b,"f")}constructor({address:i,publicKey:e,label:t,icon:n}){g.set(this,void 0),p.set(this,void 0),v.set(this,void 0),w.set(this,void 0),y.set(this,void 0),b.set(this,void 0),new.target===T&&Object.freeze(this),m(this,g,i,"f"),m(this,p,e,"f"),m(this,v,U,"f"),m(this,w,B,"f"),m(this,y,t,"f"),m(this,b,n,"f")}}g=new WeakMap,p=new WeakMap,v=new WeakMap,w=new WeakMap,y=new WeakMap,b=new WeakMap;var c=globalThis&&globalThis.__awaiter||function(s,i,e,t){function n(r){return r instanceof e?r:new e(function(a){a(r)})}return new(e||(e=Promise))(function(r,a){function h(o){try{l(t.next(o))}catch(d){a(d)}}function _(o){try{l(t.throw(o))}catch(d){a(d)}}function l(o){o.done?r(o.value):n(o.value).then(h,_)}l((t=t.apply(s,i||[])).next())})};class I extends W{constructor(i){super(),this._network="mainnet-beta",this._iframeParams={},this._element=null,this._iframe=null,this._publicKey=null,this._account=null,this._isConnected=!1,this._connectHandler=null,this._messageHandlers={},this._handleEvent=e=>{var t,n;switch(e.type){case"connect":{this._collapseIframe(),!((t=e.data)===null||t===void 0)&&t.publicKey?(this._publicKey=e.data.publicKey,this._isConnected=!0,this._connectHandler&&(this._connectHandler.resolve(),this._connectHandler=null),this._connected()):(this._connectHandler&&(this._connectHandler.reject(),this._connectHandler=null),this._disconnected());return}case"disconnect":{this._connectHandler&&(this._connectHandler.reject(),this._connectHandler=null),this._disconnected();return}case"accountChanged":{!((n=e.data)===null||n===void 0)&&n.publicKey?(this._publicKey=e.data.publicKey,this.emit("accountChanged",this.publicKey),this._standardConnected()):(this.emit("accountChanged",void 0),this._standardDisconnected());return}default:return}},this._handleResize=e=>{e.resizeMode==="full"?e.params.mode==="fullscreen"?this._expandIframe():e.params.mode==="hide"&&this._collapseIframe():e.resizeMode==="coordinates"&&this._resizeIframe(e.params)},this._handleMessage=e=>{var t;if(((t=e.data)===null||t===void 0?void 0:t.channel)!=="solflareIframeToWalletAdapter")return;const n=e.data.data||{};if(n.type==="event")this._handleEvent(n.event);else if(n.type==="resize")this._handleResize(n);else if(n.type==="response"&&this._messageHandlers[n.id]){const{resolve:r,reject:a}=this._messageHandlers[n.id];delete this._messageHandlers[n.id],n.error?a(n.error):r(n.result)}},this._removeElement=()=>{this._element&&(this._element.remove(),this._element=null)},this._removeDanglingElements=()=>{const e=document.getElementsByClassName("solflare-metamask-wallet-adapter-iframe");for(const t of e)t.parentElement&&t.remove()},this._injectElement=()=>{this._removeElement(),this._removeDanglingElements();const e=Object.assign(Object.assign({},this._iframeParams),{mm:!0,v:1,cluster:this._network||"mainnet-beta",origin:window.location.origin||"",title:document.title||""}),t=Object.keys(e).map(r=>`${r}=${encodeURIComponent(e[r])}`).join("&"),n=`${I.IFRAME_URL}?${t}`;this._element=document.createElement("div"),this._element.className="solflare-metamask-wallet-adapter-iframe",this._element.innerHTML=`
      <iframe src='${n}' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>
    `,document.body.appendChild(this._element),this._iframe=this._element.querySelector("iframe"),window.addEventListener("message",this._handleMessage,!1)},this._collapseIframe=()=>{this._iframe&&(this._iframe.style.top="",this._iframe.style.right="",this._iframe.style.height="2px",this._iframe.style.width="2px")},this._expandIframe=()=>{this._iframe&&(this._iframe.style.top="0px",this._iframe.style.bottom="0px",this._iframe.style.left="0px",this._iframe.style.right="0px",this._iframe.style.width="100%",this._iframe.style.height="100%")},this._resizeIframe=e=>{this._iframe&&(this._iframe.style.top=isFinite(e.top)?`${e.top}px`:"",this._iframe.style.bottom=isFinite(e.bottom)?`${e.bottom}px`:"",this._iframe.style.left=isFinite(e.left)?`${e.left}px`:"",this._iframe.style.right=isFinite(e.right)?`${e.right}px`:"",this._iframe.style.width=isFinite(e.width)?`${e.width}px`:e.width,this._iframe.style.height=isFinite(e.height)?`${e.height}px`:e.height)},this._sendIframeMessage=e=>{if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");return new Promise((t,n)=>{var r,a;const h=P();this._messageHandlers[h]={resolve:t,reject:n},(a=(r=this._iframe)===null||r===void 0?void 0:r.contentWindow)===null||a===void 0||a.postMessage({channel:"solflareWalletAdapterToIframe",data:Object.assign({id:h},e)},"*")})},this._connected=()=>{this._isConnected=!0,this.emit("connect",this.publicKey),this._standardConnected()},this._disconnected=()=>{this._publicKey=null,this._isConnected=!1,window.removeEventListener("message",this._handleMessage,!1),this._removeElement(),this.emit("disconnect"),this._standardDisconnected()},this._standardConnected=()=>{if(!this.publicKey)return;const e=this.publicKey.toString();(!this._account||this._account.address!==e)&&(this._account=new T({address:e,publicKey:this.publicKey.toBytes()}),this.emit("standard_change",{accounts:this.standardAccounts}))},this._standardDisconnected=()=>{this._account&&(this._account=null,this.emit("standard_change",{accounts:this.standardAccounts}))},i?.network&&(this._network=i?.network),window.SolflareMetaMaskParams&&(this._iframeParams=Object.assign(Object.assign({},this._iframeParams),window.SolflareMetaMaskParams)),i?.params&&(this._iframeParams=Object.assign(Object.assign({},this._iframeParams),i?.params))}get publicKey(){return this._publicKey?new k(this._publicKey):null}get standardAccount(){return this._account}get standardAccounts(){return this._account?[this._account]:[]}get isConnected(){return this._isConnected}get connected(){return this.isConnected}get autoApprove(){return!1}connect(){return c(this,void 0,void 0,function*(){this.connected||(this._injectElement(),yield new Promise((i,e)=>{this._connectHandler={resolve:i,reject:e}}))})}disconnect(){return c(this,void 0,void 0,function*(){yield this._sendIframeMessage({method:"disconnect"}),this._disconnected()})}signTransaction(i){var e;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const t=C(i),{signature:n}=yield this._sendIframeMessage({method:"signTransaction",params:{message:u.encode(t)}});return K(i,this.publicKey,u.decode(n)),i}catch(t){throw new Error(((e=t?.toString)===null||e===void 0?void 0:e.call(t))||"Failed to sign transaction")}})}signAllTransactions(i){var e;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const t=i.map(r=>C(r)),{signatures:n}=yield this._sendIframeMessage({method:"signAllTransactions",params:{messages:t.map(r=>u.encode(r))}});for(let r=0;r<i.length;r++)K(i[r],this.publicKey,u.decode(n[r]));return i}catch(t){throw new Error(((e=t?.toString)===null||e===void 0?void 0:e.call(t))||"Failed to sign transactions")}})}signAndSendTransaction(i,e){var t;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const n=O(i),{signature:r}=yield this._sendIframeMessage({method:"signAndSendTransaction",params:{transaction:u.encode(n),options:e}});return r}catch(n){throw new Error(((t=n?.toString)===null||t===void 0?void 0:t.call(n))||"Failed to sign and send transaction")}})}signMessage(i,e="utf8"){var t;return c(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const{signature:n}=yield this._sendIframeMessage({method:"signMessage",params:{data:u.encode(i),display:e}});return Uint8Array.from(u.decode(n))}catch(n){throw new Error(((t=n?.toString)===null||t===void 0?void 0:t.call(n))||"Failed to sign message")}})}sign(i,e="utf8"){return c(this,void 0,void 0,function*(){return yield this.signMessage(i,e)})}static isSupported(){return c(this,void 0,void 0,function*(){return!!(yield L())})}standardSignAndSendTransaction(...i){return c(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const e=[];if(i.length===1){const{transaction:t,account:n,chain:r,options:a}=i[0],{minContextSlot:h,preflightCommitment:_,skipPreflight:l,maxRetries:o}=a||{};if(n!==this._account)throw new Error("invalid account");if(!M(r))throw new Error("invalid chain");const d=yield this.signAndSendTransaction(S.deserialize(t),{preflightCommitment:_,minContextSlot:h,maxRetries:o,skipPreflight:l});e.push({signature:u.decode(d)})}else if(i.length>1)for(const t of i)e.push(...yield this.standardSignAndSendTransaction(t));return e})}standardSignTransaction(...i){return c(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const e=[];if(i.length===1){const{transaction:t,account:n,chain:r}=i[0];if(n!==this._account)throw new Error("invalid account");if(r&&!M(r))throw new Error("invalid chain");const a=yield this.signTransaction(S.deserialize(t));e.push({signedTransaction:a.serialize()})}else if(i.length>1){let t;for(const a of i){if(a.account!==this._account)throw new Error("invalid account");if(a.chain){if(!M(a.chain))throw new Error("invalid chain");if(t){if(a.chain!==t)throw new Error("conflicting chain")}else t=a.chain}}const n=i.map(({transaction:a})=>S.deserialize(a)),r=yield this.signAllTransactions(n);e.push(...r.map(a=>({signedTransaction:a.serialize()})))}return e})}standardSignMessage(...i){return c(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const e=[];if(i.length===1){const{message:t,account:n}=i[0];if(n!==this._account)throw new Error("invalid account");const r=yield this.signMessage(t);e.push({signedMessage:t,signature:r})}else if(i.length>1)for(const t of i)e.push(...yield this.standardSignMessage(t));return e})}}I.IFRAME_URL="https://widget.solflare.com/";export{T as StandardSolflareMetaMaskWalletAccount,I as default};
